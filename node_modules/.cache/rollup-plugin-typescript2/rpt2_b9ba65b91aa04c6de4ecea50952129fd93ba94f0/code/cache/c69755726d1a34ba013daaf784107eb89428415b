{"code":"import * as React from \"react\";\r\nfunction setFileName(title) {\r\n    var fileTitle = title.split(\" \").join(\"_\");\r\n    return fileTitle;\r\n}\r\nfunction setGroup(width, height) {\r\n    var xmlns = \"http://www.w3.org/2000/svg\";\r\n    var group = document.createElementNS(xmlns, \"svg\");\r\n    group.setAttributeNS(null, \"viewbox\", \"0 0 100 100\");\r\n    group.setAttributeNS(null, \"width\", \"\" + width);\r\n    group.setAttributeNS(null, \"height\", \"\" + height);\r\n    return group;\r\n}\r\nfunction setChartTitle(title) {\r\n    var xmlns = \"http://www.w3.org/2000/svg\";\r\n    var chartTitle = document.createElementNS(xmlns, \"text\");\r\n    chartTitle.setAttributeNS(null, \"font-size\", \"25\");\r\n    chartTitle.setAttributeNS(null, \"font-family\", \"helvetica\");\r\n    chartTitle.setAttributeNS(null, \"x\", \"50%\");\r\n    chartTitle.setAttributeNS(null, \"y\", \"35\");\r\n    chartTitle.setAttributeNS(null, \"text-anchor\", \"middle\");\r\n    chartTitle.textContent = title;\r\n    return chartTitle;\r\n}\r\nfunction ExportChartAsImage(_a) {\r\n    var svgRef = _a.svgRef, _b = _a.scale, scale = _b === void 0 ? 1 : _b, _c = _a.compression, compression = _c === void 0 ? 1.0 : _c, _d = _a.type, type = _d === void 0 ? \"image/png\" : _d, fileName = _a.fileName, chartTitle = _a.chartTitle, _e = _a.backgroundColor, backgroundColor = _e === void 0 ? null : _e, _f = _a.buttonTitle, buttonTitle = _f === void 0 ? \"Export\" : _f;\r\n    debugger;\r\n    var downloadImage = function () {\r\n        // Find the svg by ref\r\n        var current = svgRef.current;\r\n        var selectedSvg = current;\r\n        var width = selectedSvg.clientWidth + 100 * scale;\r\n        var height = selectedSvg.clientHeight + 100 * scale;\r\n        var canvasWidth = width;\r\n        var canvasHeight = height;\r\n        var clonedSvgElement = selectedSvg.cloneNode(true);\r\n        // tricks for firefox rendering\r\n        var widthAttribute = width - 50;\r\n        var heightAttribute = height - 50;\r\n        clonedSvgElement.setAttribute(\"width\", widthAttribute.toString());\r\n        clonedSvgElement.setAttribute(\"height\", heightAttribute.toString());\r\n        clonedSvgElement.setAttribute(\"x\", \"25\");\r\n        clonedSvgElement.setAttribute(\"y\", \"50\");\r\n        var newSVG = setGroup(width, height);\r\n        if (chartTitle) {\r\n            var title = setChartTitle(chartTitle);\r\n            newSVG.appendChild(title);\r\n        }\r\n        newSVG.appendChild(clonedSvgElement);\r\n        var xml = new XMLSerializer().serializeToString(newSVG);\r\n        var blob = new Blob([xml], { type: \"image/svg+xml;charset=utf-8\" });\r\n        var URL = window.URL || window.webkitURL || window;\r\n        var blobURL = URL.createObjectURL(blob);\r\n        // Create a canvas for drawing the new img\r\n        var canvas = document.createElement(\"canvas\");\r\n        var context = canvas.getContext(\"2d\");\r\n        var image = new Image();\r\n        // Add the img into the canvas and download it\r\n        image.onload = function () {\r\n            canvas.width = canvasWidth;\r\n            canvas.height = canvasHeight;\r\n            context.fillStyle = backgroundColor !== null && backgroundColor !== void 0 ? backgroundColor : \"transparent\";\r\n            context.fillRect(0, 0, canvasWidth, canvasHeight);\r\n            context.drawImage(image, 0, 0, width, height, 0, 0, width, height);\r\n            var imgUri = canvas.toDataURL(type, compression);\r\n            var link = document.createElement(\"a\");\r\n            link.download = setFileName(fileName);\r\n            link.href = imgUri;\r\n            link.click();\r\n        };\r\n        image.src = blobURL;\r\n    };\r\n    return (React.createElement(\"button\", { \"aria-label\": \"Export\", onClick: function () { return downloadImage(); } }, buttonTitle));\r\n}\r\nexport default ExportChartAsImage;\r\n//# sourceMappingURL=index.js.map","references":["/home/ramirez/Documents/exportSvgAsImage/node_modules/@types/react/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/ramirez/Documents/exportSvgAsImage/node_modules/.cache/rollup-plugin-typescript2/placeholder/index.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nexport declare type Props = {\r\n    svgRef: any;\r\n    scale?: number;\r\n    compression?: number;\r\n    type?: string;\r\n    fileName: string;\r\n    backgroundColor?: string | null;\r\n    chartTitle?: string;\r\n    buttonTitle?: string;\r\n};\r\ndeclare function ExportChartAsImage({ svgRef, scale, compression, type, fileName, chartTitle, backgroundColor, buttonTitle, }: Props): JSX.Element;\r\nexport default ExportChartAsImage;\r\n"}}
